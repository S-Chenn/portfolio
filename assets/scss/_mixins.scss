$bp-pc: 768;
$bp-wide: 1920;
$vw-screen-width: 750;
$vw-screen-width-wide: 1920;


@mixin pc ($min-width: $bp-pc) {
  @media screen and (min-width: $min-width + 'px') {
    @content;
  }
}

@mixin wide($min-width: $bp-wide) {
  @media screen and (min-width: $min-width + 'px') {
    @content;
  }
}

@mixin mq($min-width: $break-point) {
  @media screen and (min-width: $min-width) {
    @content;
  }
}

@function vw($px, $bp:$vw-screen-width) {

  $result: $px / $bp * 100vw;

  @return $result;
}

@function karabina($value) {

  @return calc( #{$value} * (100vw / 750));
}

@function vwpc($px, $bp:$vw-screen-width-wide) {

  $result: $px / $bp * 100vw;

  @return $result;
}

@mixin padding($a: null, $b:null, $c:null, $d:null) {

  @if $b == null {
    padding: vwpc($a);

    @include wide () {
      padding: $a * 1px;
    }

  } @else if $c == null {
    padding-top: vwpc($a);
    padding-right: vwpc($b);
    padding-bottom: vwpc($a);
    padding-left: vwpc($b);

    @include wide () {
      padding-top: $a * 1px;
      padding-right: $b * 1px;
      padding-bottom: $a * 1px;
      padding-left: $b * 1px;
    }

  } @else if $d == null {
    padding-top: vwpc($a);
    padding-right: vwpc($b);
    padding-bottom: vwpc($c);
    padding-left: vwpc($b);

    @include wide () {
      padding-top: $a * 1px;
      padding-right: $b * 1px;
      padding-bottom: $c * 1px;
      padding-left: $b * 1px;
    }

  } @else {
    padding-top: vwpc($a);
    padding-right: vwpc($b);
    padding-bottom: vwpc($c);
    padding-left: vwpc($d);

    @include wide () {
      padding-top: $a * 1px;
      padding-right: $b * 1px;
      padding-bottom: $c * 1px;
      padding-left: $d * 1px;
    }

  }
}

@mixin margin($a: null, $b:null, $c:null, $d:null) {

  @if $b == null {
    margin: vwpc($a);

    @include wide () {
      margin: $a * 1px;
    }

  } @else if $c == null {
    margin-top: vwpc($a);
    margin-right: vwpc($b);
    margin-bottom: vwpc($a);
    margin-left: vwpc($b);

    @include wide () {
      margin-top: $a * 1px;
      margin-right: $b * 1px;
      margin-bottom: $a * 1px;
      margin-left: $b * 1px;
    }

  } @else if $d == null {
    margin-top: vwpc($a);
    margin-right: vwpc($b);
    margin-bottom: vwpc($c);
    margin-left: vwpc($b);

    @include wide () {
      margin-top: $a * 1px;
      margin-right: $b * 1px;
      margin-bottom: $c * 1px;
      margin-left: $b * 1px;
    }

  } @else {
    margin-top: vwpc($a);
    margin-right: vwpc($b);
    margin-bottom: vwpc($c);
    margin-left: vwpc($d);

    @include wide () {
      margin-top: $a * 1px;
      margin-right: $b * 1px;
      margin-bottom: $c * 1px;
      margin-left: $d * 1px;
    }

  }
}

@mixin width($width) {

  width: vwpc($width);

  @include wide () {
    width: $width * 1px;
  }
}

@mixin height($height) {

  height: vwpc($height);

  @include wide () {
    height: $height * 1px;
  }
}

@mixin fz($fz) {

  font-size: vwpc($fz);

  @include wide () {
    font-size: $fz * 1px;
  }
}
